package graphql

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.38

import (
	"context"

	"github.com/eiixy/monorepo/internal/app/account/service/graphql/dataloader"
	"github.com/eiixy/monorepo/internal/app/account/service/graphql/model"
	"github.com/eiixy/monorepo/internal/data/account/ent"
)

// UserList is the resolver for the userList field.
func (r *queryResolver) UserList(ctx context.Context, page *int, size *int, where *ent.UserWhereInput, orderBy *ent.UserOrder) (*model.UserListReply, error) {
	var reply model.UserListReply
	var err error
	query, err := where.Filter(r.client.User.Query())
	if err != nil {
		return nil, err
	}
	reply.Items, reply.Count, err = query.List(ctx, page, size, orderBy)
	if err != nil {
		return nil, err
	}
	return &reply, nil
}

// RoleCount is the resolver for the roleCount field.
func (r *userResolver) RoleCount(ctx context.Context, obj *ent.User) (int, error) {
	return dataloader.For(ctx).GetUserRoleCount(ctx, obj.ID)
}
